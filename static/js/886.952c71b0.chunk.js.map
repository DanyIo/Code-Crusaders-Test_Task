{"version":3,"file":"static/js/886.952c71b0.chunk.js","mappings":"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","sources":["app/hooks.ts","components/ScrollBar/ScrollBar.tsx","pages/Income/InputBlock/InputBlock.tsx","pages/Income/IncomeHistory/IncomeHistory.tsx","pages/Income/Income.tsx","../node_modules/@mui/icons-material/Clear.js"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import styled from \"@emotion/styled\";\nimport { Box } from \"@mui/material\";\n\nexport const CustomScrollBar = styled(Box)(({ theme }) => ({\n  maxHeight: \"300px\",\n  overflowY: \"auto\",\n  width: \"100%\",\n  mt: 2,\n\n  \"&::-webkit-scrollbar\": {\n    width: \"6px\",\n  },\n\n  \"&::-webkit-scrollbar-thumb\": {\n    backgroundColor: \"black\",\n    borderRadius: \"3px\",\n  },\n\n  \"&::-webkit-scrollbar-thumb:hover\": {\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n  },\n\n  \"&::-webkit-scrollbar-track\": {\n    backgroundColor: \"transparent\",\n  },\n\n  \"&::-webkit-scrollbar-track-piece\": {\n    background: \"rgba(0, 0, 0, 0.1)\",\n    borderRadius: \"3px\",\n  },\n}));\n","import Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\n\nimport {\n  addNewIncome,\n  addTransaction,\n} from \"../../../features/financeSlice/financeSlice\";\nimport { useAppDispatch } from \"../../../app/hooks\";\n\nimport { useState } from \"react\";\n\nfunction createData(\n  id: number,\n  date: string,\n  name: string,\n  paymentMethod: string,\n  amount: number\n) {\n  return { id, date, name, paymentMethod, amount };\n}\n\nexport default function InputBlock() {\n  const [transactionDate, setTransactionDate] = useState(\n    `${new Date().toDateString()}`\n  );\n  const [senderName, setSenderName] = useState(\"\");\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n  const [transactionAmount, setTransactionAmount] = useState(\"\");\n\n  const dispatch = useAppDispatch();\n\n  const handleSubmit = () => {\n    if (\n      transactionDate.trim() === \"\" ||\n      senderName.trim() === \"\" ||\n      paymentMethod.trim() === \"\" ||\n      transactionAmount.trim() === \"\" ||\n      isNaN(parseFloat(transactionAmount))\n    ) {\n      return;\n    }\n\n    const newIncome = createData(\n      0,\n      transactionDate,\n      senderName,\n      paymentMethod,\n      parseFloat(transactionAmount)\n    );\n\n    dispatch(addNewIncome(newIncome));\n    dispatch(\n      addTransaction({\n        action: \"Income\",\n        amount: parseFloat(transactionAmount),\n      })\n    );\n\n    setTransactionDate(`${new Date().toDateString()}`);\n    setSenderName(\"\");\n    setPaymentMethod(\"\");\n    setTransactionAmount(\"\");\n  };\n\n  return (\n    <Box\n      sx={{\n        padding: \"10px\",\n        paddingTop: 0,\n        borderRadius: \"5px\",\n        fontFamily: \"Georgia\",\n        background: \"white\",\n        width: \"90%\",\n      }}\n    >\n      <h2\n        style={{\n          borderBottom: \"1px solid grey\",\n          paddingTop: 10,\n          paddingBottom: 10,\n          margin: 10,\n          fontWeight: \"normal\",\n          color: \"#3f51b5\",\n          fontSize: 26,\n        }}\n      >\n        Fill new income\n      </h2>\n      <Grid container>\n        <Grid\n          item\n          xs={6}\n          style={{\n            padding: 10,\n          }}\n        >\n          <h3\n            style={{\n              marginTop: 0,\n              fontWeight: \"normal\",\n              fontSize: 16,\n            }}\n          >\n            Date of transaction\n          </h3>\n          <TextField\n            variant=\"outlined\"\n            defaultValue={`${new Date().toDateString()}`}\n            sx={{\n              width: \"100%\",\n              borderRadius: 5,\n            }}\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={6}\n          style={{\n            padding: 10,\n          }}\n        >\n          <h3\n            style={{\n              marginTop: 0,\n              fontWeight: \"normal\",\n              fontSize: 16,\n            }}\n          >\n            Name of sender\n          </h3>\n          <TextField\n            variant=\"outlined\"\n            placeholder=\"Zoreslava Shpak\"\n            style={{\n              width: \"100%\",\n              borderRadius: 5,\n            }}\n            value={senderName}\n            onChange={(e) => setSenderName(e.target.value)}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={6}\n          style={{\n            padding: 10,\n          }}\n        >\n          <h3\n            style={{\n              marginTop: 0,\n              fontWeight: \"normal\",\n              fontSize: 16,\n            }}\n          >\n            Payment method\n          </h3>\n          <TextField\n            variant=\"outlined\"\n            placeholder=\"VISA\"\n            style={{\n              width: \"100%\",\n              borderRadius: 5,\n            }}\n            value={paymentMethod}\n            onChange={(e) => setPaymentMethod(e.target.value)}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={6}\n          style={{\n            padding: 10,\n          }}\n        >\n          <h3\n            style={{\n              marginTop: 0,\n              fontWeight: \"normal\",\n              fontSize: 16,\n            }}\n          >\n            Amount of transaction\n          </h3>\n          <TextField\n            variant=\"outlined\"\n            placeholder=\"6 666\"\n            style={{\n              width: \"100%\",\n              borderRadius: 5,\n            }}\n            value={transactionAmount}\n            onChange={(e) => setTransactionAmount(e.target.value)}\n          />\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: 2,\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          sx={{\n            backgroundColor: \"black\",\n            width: \"50%\",\n            color: \"white\",\n            \":hover\": {\n              backgroundColor: \"gray\",\n            },\n          }}\n          onClick={handleSubmit}\n        >\n          Add new income\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { IconButton } from \"@mui/material\";\n\nimport { useSelector } from \"react-redux\";\nimport {\n  selectIncome,\n  deleteIncome,\n} from \"../../../features/financeSlice/financeSlice\";\nimport { CustomScrollBar } from \"../../../components/ScrollBar/ScrollBar\";\nimport { useAppDispatch } from \"../../../app/hooks\";\n\nexport default function IncomeHistory() {\n  const allIncomes = useSelector(selectIncome);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Box\n      sx={{\n        marginTop: \"30px\",\n        padding: \"5px\",\n        width: \"90%\",\n        paddingTop: 0,\n        borderRadius: \"5px\",\n        fontFamily: \"Georgia\",\n        background: \"white\",\n      }}\n    >\n      <h2\n        style={{\n          padding: 10,\n          fontWeight: \"normal\",\n          color: \"#3f51b5\",\n          fontSize: 26,\n        }}\n      >\n        Income history\n      </h2>\n      <CustomScrollBar>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ fontFamily: \"Georgia\" }}>Date</TableCell>\n            <TableCell style={{ fontFamily: \"Georgia\" }}>\n              Name of sender\n            </TableCell>\n            <TableCell style={{ fontFamily: \"Georgia\" }}>\n              Payment method\n            </TableCell>\n            <TableCell style={{ fontFamily: \"Georgia\" }}>Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {allIncomes.map((row, index) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.paymentMethod} •••• •••• •••• ••••</TableCell>\n              <TableCell align=\"left\">{`${row.amount} $`}</TableCell>\n              <TableCell>\n                <IconButton\n                  color=\"secondary\"\n                  sx={{ color: \"black\" }}\n                  onClick={() => dispatch(deleteIncome(index))}\n                >\n                  <ClearIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CustomScrollBar>\n      <Box mt={2} />\n    </Box>\n  );\n}\n","import Container from \"@mui/material/Container\";\n\nimport InputBlock from \"./InputBlock/InputBlock\";\nimport IncomeHistory from \"./IncomeHistory/IncomeHistory\";\n\nexport const IncomePage = () => {\n  return (\n    <Container\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#000000\",\n        borderRadius: \"3%\",\n        marginTop: 35,\n        padding: \"2rem\",\n        boxShadow: \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n        marginBottom: \"50px\",\n      }}\n    >\n      <InputBlock />\n      <IncomeHistory />\n    </Container>\n  );\n};\n\nexport default IncomePage;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexports.default = _default;"],"names":["useAppDispatch","useDispatch","CustomScrollBar","styled","Box","_ref","theme","maxHeight","overflowY","width","mt","backgroundColor","borderRadius","background","InputBlock","_useState","useState","concat","Date","toDateString","_useState2","_slicedToArray","transactionDate","setTransactionDate","_useState3","_useState4","senderName","setSenderName","_useState5","_useState6","paymentMethod","setPaymentMethod","_useState7","_useState8","transactionAmount","setTransactionAmount","dispatch","_jsxs","sx","padding","paddingTop","fontFamily","children","_jsx","style","borderBottom","paddingBottom","margin","fontWeight","color","fontSize","Grid","container","item","xs","marginTop","TextField","variant","defaultValue","InputProps","readOnly","placeholder","value","onChange","e","target","display","justifyContent","Button","onClick","trim","isNaN","parseFloat","newIncome","id","date","name","amount","createData","addNewIncome","addTransaction","action","IncomeHistory","allIncomes","useSelector","selectIncome","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","index","align","IconButton","deleteIncome","ClearIcon","IncomePage","Container","flexDirection","alignItems","boxShadow","marginBottom","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}