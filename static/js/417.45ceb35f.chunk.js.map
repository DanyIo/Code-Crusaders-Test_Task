{"version":3,"file":"static/js/417.45ceb35f.chunk.js","mappings":"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","sources":["app/hooks.ts","pages/Expense/ExpenseList/ExpenseList.tsx","pages/Expense/Expense.tsx","../node_modules/@mui/icons-material/Clear.js"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TableHead,\n  Box,\n  Typography,\n} from \"@mui/material\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { IconButton } from \"@mui/material\";\n\nimport { useSelector } from \"react-redux\";\n\nimport {\n  selectExpense,\n  deleteExpense,\n} from \"../../../features/financeSlice/financeSlice\";\nimport { useAppDispatch } from \"../../../app/hooks\";\n\nexport const ExpenseList = () => {\n  const expenses = useSelector(selectExpense);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Box\n      sx={{\n        marginTop: \"30px\",\n        padding: \"5px\",\n        width: \"90%\",\n        paddingTop: 0,\n        borderRadius: \"5px\",\n        fontFamily: \"Georgia\",\n        background: \"white\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <h2\n        style={{\n          padding: 10,\n          fontWeight: \"normal\",\n          color: \"black\",\n          fontSize: 26,\n        }}\n      >\n        Expense history\n      </h2>\n      {expenses.length === 0 ? (\n        <Typography variant=\"body1\">No expenses added yet.</Typography>\n      ) : (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell style={{ fontFamily: \"Georgia\" }}>Title</TableCell>\n              <TableCell style={{ fontFamily: \"Georgia\" }}>Amount</TableCell>\n              <TableCell style={{ fontFamily: \"Georgia\" }}></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {expenses.map((row, index) => (\n              <TableRow key={row.title}>\n                <TableCell>{row.title}</TableCell>\n                <TableCell>{row.amount}</TableCell>\n                <TableCell>\n                  <IconButton\n                    color=\"secondary\"\n                    sx={{ color: \"black\" }}\n                    onClick={() => dispatch(deleteExpense(index))}\n                  >\n                    <ClearIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n      <Box mt={2} />\n    </Box>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Typography, TextField, Button, Box } from \"@mui/material\";\n\nimport { ExpenseList } from \"./ExpenseList/ExpenseList\";\n\nimport { addExpense } from \"../../features/financeSlice/financeSlice\";\nimport { useAppDispatch } from \"../../app/hooks\";\n\nconst ExpensePage = () => {\n  const [expenseTitle, setExpenseTitle] = useState(\"\");\n  const [expenseAmount, setExpenseAmount] = useState(\"\");\n  const [expenses, setExpenses] = useState<{ title: string; amount: number }[]>(\n    []\n  );\n\n  const dispatch = useAppDispatch();\n\n  const handleExpenseSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    // Validate the expense title and amount\n    if (expenseTitle.trim() === \"\" || isNaN(parseFloat(expenseAmount))) {\n      // Handle the case when either the title or amount is empty or not a valid number\n      return;\n    }\n\n    // Create a new expense object\n    const newExpense = {\n      title: expenseTitle,\n      amount: parseFloat(expenseAmount),\n    };\n\n    dispatch(addExpense(newExpense));\n\n    // Add the new expense to the expenses array\n    setExpenses([...expenses, newExpense]);\n\n    // Reset the input fields\n    setExpenseTitle(\"\");\n    setExpenseAmount(\"\");\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Typography variant=\"h2\" sx={{ mb: 2 }}>\n        Expense Page\n      </Typography>\n      <form onSubmit={handleExpenseSubmit}>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextField\n            label=\"Expense Title\"\n            value={expenseTitle}\n            onChange={(e) => setExpenseTitle(e.target.value)}\n            fullWidth\n            margin=\"normal\"\n          />\n\n          <TextField\n            label=\"Expense Amount\"\n            value={expenseAmount}\n            onChange={(e) => setExpenseAmount(e.target.value)}\n            fullWidth\n            margin=\"normal\"\n          />\n\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            sx={{\n              mt: 2,\n              backgroundColor: \"black\",\n              \":hover\": {\n                backgroundColor: \"gray\",\n              },\n            }}\n          >\n            Add Expense\n          </Button>\n        </Box>\n      </form>\n      <ExpenseList />\n    </Box>\n  );\n};\n\nexport default ExpensePage;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexports.default = _default;"],"names":["useAppDispatch","useDispatch","ExpenseList","expenses","useSelector","selectExpense","dispatch","_jsxs","Box","sx","marginTop","padding","width","paddingTop","borderRadius","fontFamily","background","display","justifyContent","alignItems","flexDirection","children","_jsx","style","fontWeight","color","fontSize","length","Typography","variant","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","index","title","amount","IconButton","onClick","deleteExpense","ClearIcon","mt","_useState","useState","_useState2","_slicedToArray","expenseTitle","setExpenseTitle","_useState3","_useState4","expenseAmount","setExpenseAmount","_useState5","_useState6","setExpenses","mb","onSubmit","e","preventDefault","trim","isNaN","parseFloat","newExpense","addExpense","concat","_toConsumableArray","TextField","label","value","onChange","target","fullWidth","margin","Button","type","backgroundColor","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}