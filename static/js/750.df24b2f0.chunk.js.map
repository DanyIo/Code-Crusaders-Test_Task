{"version":3,"file":"static/js/750.df24b2f0.chunk.js","mappings":"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","sources":["app/hooks.ts","pages/Credit/CreditPageMW/creditPageMW.tsx","pages/Credit/Credit.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from \"react\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { TextField } from \"@mui/material\";\nimport { useSpring, animated } from \"@react-spring/web\";\n\nimport {\n  addCredit,\n  increaseTotalBudget,\n} from \"../../../features/financeSlice/financeSlice\";\nimport { useAppDispatch } from \"../../../app/hooks\";\n\ninterface FadeProps {\n  children: React.ReactElement;\n  in?: boolean;\n  onClick?: any;\n  onEnter?: (node: HTMLElement, isAppearing: boolean) => void;\n  onExited?: (node: HTMLElement, isAppearing: boolean) => void;\n  ownerState?: any;\n}\n\ninterface ICreditPageModalWindow {\n  creditLimit: number;\n  handleShowAlert: Function;\n  creditScore: number;\n}\n\nconst Fade = React.forwardRef<HTMLDivElement, FadeProps>(function Fade(\n  props,\n  ref\n) {\n  const {\n    children,\n    in: open,\n    onClick,\n    onEnter,\n    onExited,\n    ownerState,\n    ...other\n  } = props;\n  const style = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: open ? 1 : 0 },\n    onStart: () => {\n      if (open && onEnter) {\n        onEnter(null as any, true);\n      }\n    },\n    onRest: () => {\n      if (!open && onExited) {\n        onExited(null as any, true);\n      }\n    },\n  });\n\n  return (\n    <animated.div ref={ref} style={style} {...other}>\n      {React.cloneElement(children, { onClick })}\n    </animated.div>\n  );\n});\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"40%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function CreditPageModalWindow({\n  creditLimit,\n  handleShowAlert,\n  creditScore,\n}: ICreditPageModalWindow) {\n  const [creditAmount, setCreditAmount] = React.useState<string>(\"\");\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const dispatch = useAppDispatch();\n\n  const handleSubmit = () => {\n    if (creditAmount.trim() === \"\") {\n      return;\n    } else {\n      const numericRegex = /^[0-9]+(\\.[0-9]{1,2})?$/;\n      if (!numericRegex.test(creditAmount)) {\n        return;\n      } else {\n        const parsedAmount = parseFloat(creditAmount);\n        if (parsedAmount >= creditLimit || parsedAmount === 0) {\n          return;\n        } else {\n          dispatch((dispatch) => {\n            dispatch(addCredit(parsedAmount));\n            dispatch(increaseTotalBudget(parsedAmount));\n          });\n          setCreditAmount(\"\");\n          handleShowAlert();\n          handleClose();\n        }\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Button\n        disabled={creditScore === 0}\n        variant=\"contained\"\n        sx={{\n          backgroundColor: \"black\",\n          color: \"white\",\n          mt: 2,\n          ml: \"1rem\",\n          \":hover\": {\n            backgroundColor: \"gray\",\n          },\n        }}\n        onClick={handleOpen}\n      >\n        Apply for Credit\n      </Button>\n      <Modal\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        slots={{ backdrop: Backdrop }}\n        slotProps={{\n          backdrop: {\n            TransitionComponent: Fade,\n          },\n        }}\n      >\n        <Fade in={open}>\n          <Box\n            sx={{\n              ...style,\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography\n              id=\"spring-modal-title\"\n              variant=\"h5\"\n              component=\"h2\"\n              sx={{ mb: 2 }}\n            >\n              Input credit amount\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              placeholder={`Max value ${creditLimit.toLocaleString()}$`}\n              style={{\n                width: \"75%\",\n                borderRadius: 5,\n              }}\n              value={creditAmount}\n              onChange={(e) => setCreditAmount(e.target.value)}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              sx={{\n                backgroundColor: \"black\",\n                color: \"white\",\n                mt: 2,\n                \":hover\": {\n                  backgroundColor: \"gray\",\n                },\n                width: \"50%\",\n              }}\n              onClick={handleSubmit}\n            >\n              Submit\n            </Button>\n          </Box>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import { Box, Typography } from \"@mui/material\";\nimport Alert from \"@mui/material/Alert\";\nimport { useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\n\nimport {\n  selectUserName,\n  selectTotalBudget,\n  selectCreditScore,\n} from \"../../features/financeSlice/financeSlice\";\n\nimport CreditPageModalWindow from \"./CreditPageMW/creditPageMW\";\n\nconst CreditPage = () => {\n  const [showSuccessAlert, setShowSuccessAlert] = useState<boolean>(false);\n\n  const userName = useSelector(selectUserName);\n  const totalBudget = useSelector(selectTotalBudget);\n  const creditScore = useSelector(selectCreditScore);\n\n  const percentage = 20;\n  const creditLimit = Math.round((totalBudget * (percentage / 15)) / 100) * 10;\n\n  useEffect(() => {\n    if (showSuccessAlert) {\n      const timeout = setTimeout(() => {\n        setShowSuccessAlert(false);\n      }, 3000);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [showSuccessAlert]);\n\n  const handleShowAlert = () => {\n    setShowSuccessAlert(true);\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"60vh\",\n          backgroundColor: \"#000000\",\n          borderRadius: \"5%\",\n          padding: \"2rem\",\n          boxShadow: \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            height: \"45vh\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"#ffffff\",\n            padding: \"2rem\",\n            borderRadius: \"8px\",\n            boxShadow: \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n          }}\n        >\n          <Typography variant=\"h4\" sx={{ mb: 3 }}>\n            Credit Details\n          </Typography>\n\n          <Typography\n            variant=\"body1\"\n            sx={{ mb: 2, fontSize: \"1.2rem\", paddingLeft: \"1rem\" }}\n          >\n            Name: {userName}\n          </Typography>\n\n          <Typography\n            variant=\"body1\"\n            sx={{ mb: 2, fontSize: \"1.2rem\", paddingLeft: \"1rem\" }}\n          >\n            Credit Score: {creditScore}\n          </Typography>\n\n          <Typography\n            variant=\"body1\"\n            sx={{ mb: 2, fontSize: \"1.2rem\", paddingLeft: \"1rem\" }}\n          >\n            Available Credit Limit: {creditLimit.toLocaleString()}$\n          </Typography>\n          <CreditPageModalWindow\n            creditLimit={creditLimit}\n            handleShowAlert={handleShowAlert}\n            creditScore={creditScore}\n          />\n        </Box>\n      </Box>\n      {showSuccessAlert && (\n        <Alert\n          severity=\"success\"\n          sx={{\n            backgroundColor: \"black\",\n            color: \"white\",\n            position: \"fixed\",\n            bottom: 16,\n            right: 16,\n            zIndex: 9999,\n          }}\n        >\n          Congrats, your credit application was successful\n        </Alert>\n      )}\n    </>\n  );\n};\n\nexport default CreditPage;\n"],"names":["useAppDispatch","useDispatch","Fade","React","props","ref","children","open","in","onClick","onEnter","onExited","other","ownerState","_objectWithoutProperties","_excluded","style","useSpring","from","opacity","to","onStart","onRest","_jsx","animated","_objectSpread","position","top","left","transform","width","bgcolor","border","boxShadow","p","CreditPageModalWindow","_ref","creditLimit","handleShowAlert","creditScore","_React$useState","_React$useState2","_slicedToArray","creditAmount","setCreditAmount","_React$useState3","_React$useState4","setOpen","handleClose","dispatch","_jsxs","Button","disabled","variant","sx","backgroundColor","color","mt","ml","Modal","onClose","closeAfterTransition","slots","backdrop","Backdrop","slotProps","TransitionComponent","Box","display","justifyContent","flexDirection","alignItems","Typography","id","component","mb","TextField","placeholder","concat","toLocaleString","borderRadius","value","onChange","e","target","trim","test","parsedAmount","parseFloat","addCredit","increaseTotalBudget","_useState","useState","_useState2","showSuccessAlert","setShowSuccessAlert","userName","useSelector","selectUserName","totalBudget","selectTotalBudget","selectCreditScore","Math","round","useEffect","timeout","setTimeout","clearTimeout","_Fragment","height","padding","fontSize","paddingLeft","Alert","severity","bottom","right","zIndex"],"sourceRoot":""}