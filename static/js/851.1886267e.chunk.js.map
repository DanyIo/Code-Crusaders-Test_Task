{"version":3,"file":"static/js/851.1886267e.chunk.js","mappings":"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","sources":["app/hooks.ts","pages/FinancialStatePage/FinancialStatePage.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n} from \"@mui/material\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { useSelector } from \"react-redux\";\nimport {\n  increaseTotalBudget,\n  reduceTheTotalBudget,\n  resetCredit,\n  resetDeposit,\n  selectCredit,\n  selectDeposit,\n  selectEmail,\n  selectExpense,\n  selectIncome,\n  selectTotalBudget,\n  selectUserName,\n} from \"../../features/financeSlice/financeSlice\";\nimport styled from \"@emotion/styled\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\nimport { useAppDispatch } from \"../../app/hooks\";\n\nconst FinancialStatePage = () => {\n  const [sortOrder, setSortOrder] = useState<\"asc\" | \"desc\">(\"asc\");\n\n  const dispatch = useAppDispatch();\n\n  const income = useSelector(selectIncome);\n  const userName = useSelector(selectUserName);\n  const userEmail = useSelector(selectEmail);\n  const totalBudget = useSelector(selectTotalBudget);\n  const expense = useSelector(selectExpense);\n  const credit = useSelector(selectCredit);\n  const deposit = useSelector(selectDeposit);\n\n  const handleSort = () => {\n    const newSortOrder = sortOrder === \"asc\" ? \"desc\" : \"asc\";\n    setSortOrder(newSortOrder);\n  };\n\n  const sortedIncome = [...income].sort((a, b) => {\n    if (sortOrder === \"asc\") {\n      return new Date(a.date).getTime() - new Date(b.date).getTime();\n    } else {\n      return new Date(b.date).getTime() - new Date(a.date).getTime();\n    }\n  });\n\n  const budgetData = [];\n\n  if (credit !== 0) {\n    budgetData.unshift({ name: \"Credit\", value: credit });\n  }\n\n  if (deposit !== 0) {\n    budgetData.unshift({ name: \"Deposit\", value: deposit });\n  }\n\n  const incomeTotal = income.reduce((total, exp) => total + exp.amount, 0);\n  if (incomeTotal !== 0) {\n    budgetData.unshift({ name: \"Income\", value: incomeTotal });\n  }\n\n  const expenseTotal = expense.reduce((total, exp) => total + exp.amount, 0);\n  if (expenseTotal !== 0) {\n    budgetData.unshift({ name: \"Expenses\", value: expenseTotal });\n  }\n\n  const COLORS = [\"#82ca9d\", \"#8884d8\"];\n\n  return (\n    <CustomScrollBar>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          backgroundColor: \"white\",\n          borderRadius: \"3%\",\n          padding: \"2rem\",\n          fontFamily: \"Georgia\",\n          width: \"800px\",\n          boxShadow: \"0px 10px 20px rgba(0, 0, 0, 0.5)\",\n        }}\n      >\n        <Box sx={{ marginTop: \"2rem\", mb: 2 }}>\n          <Typography variant=\"h4\" sx={{ mb: 3 }}>\n            User Information\n          </Typography>\n          <Typography>Name: {userName}</Typography>\n          <Typography>Email: {userEmail}</Typography>\n        </Box>\n\n        {sortedIncome.length === 0 || (\n          <Box sx={{ marginTop: \"2rem\" }}>\n            <Typography variant=\"h4\" sx={{ mb: 2 }}>\n              Income\n            </Typography>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell\n                      onClick={handleSort}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      Date\n                    </TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Amount</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {sortedIncome.map((income) => (\n                    <TableRow key={income.id}>\n                      <TableCell>{income.date}</TableCell>\n                      <TableCell>{income.name}</TableCell>\n                      <TableCell>{income.paymentMethod}</TableCell>\n                      <TableCell>${income.amount}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Box>\n        )}\n\n        {expense.length === 0 || (\n          <Box sx={{ marginTop: \"2rem\" }}>\n            <Typography variant=\"h4\" sx={{ mb: 2 }}>\n              Expenses\n            </Typography>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Title</TableCell>\n                    <TableCell>Amount</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {expense.map((expense, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{expense.title}</TableCell>\n                      <TableCell>${expense.amount}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Box>\n        )}\n\n        <Box sx={{ marginTop: \"3rem\" }}>\n          <Typography variant=\"h4\" sx={{ mb: 3 }}>\n            Total Budget:\n          </Typography>\n          <Typography variant=\"h6\">${totalBudget.toLocaleString()}</Typography>\n        </Box>\n        {credit === 0 || (\n          <Box\n            sx={{\n              marginTop: \"3rem\",\n            }}\n          >\n            <Typography variant=\"h5\" sx={{ mb: 3 }}>\n              Credit:\n            </Typography>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <Typography>${credit.toLocaleString()}</Typography>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                sx={{\n                  mt: 2,\n                  backgroundColor: \"black\",\n                  \":hover\": {\n                    backgroundColor: \"gray\",\n                  },\n                }}\n                onClick={() => {\n                  dispatch(reduceTheTotalBudget(credit * 1.2));\n                  dispatch(resetCredit());\n                }}\n              >\n                Cancel Credit\n              </Button>\n            </div>\n          </Box>\n        )}\n        {deposit === 0 || (\n          <Box\n            sx={{\n              marginTop: \"3rem\",\n            }}\n          >\n            <Typography variant=\"h5\" sx={{ mb: 3 }}>\n              Deposit:\n            </Typography>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <Typography>${deposit.toLocaleString()}</Typography>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                sx={{\n                  mt: 2,\n                  backgroundColor: \"black\",\n                  \":hover\": {\n                    backgroundColor: \"gray\",\n                  },\n                }}\n                onClick={() => {\n                  dispatch(increaseTotalBudget(deposit * 1.1));\n                  dispatch(resetDeposit());\n                }}\n              >\n                Cancel deposit\n              </Button>\n            </div>\n          </Box>\n        )}\n\n        <CssBaseline />\n        {budgetData.length === 0 || (\n          <Box\n            sx={{\n              marginTop: \"2rem\",\n              display: \"flex\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Typography variant=\"h4\">Budget Distribution</Typography>\n            <PieChart width={400} height={300}>\n              <Pie\n                dataKey=\"value\"\n                data={budgetData}\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={80}\n                label={(entry) => entry.name}\n              >\n                {budgetData.map((entry, index) => {\n                  let fill;\n                  if (entry.name === \"Credit\") {\n                    fill = \"black\";\n                  } else if (entry.name === \"Deposit\") {\n                    fill = \"blue\";\n                  } else {\n                    fill = COLORS[index % COLORS.length];\n                  }\n                  return <Cell key={index} fill={fill} />;\n                })}\n              </Pie>\n              <Legend verticalAlign=\"bottom\" />\n            </PieChart>\n          </Box>\n        )}\n      </Box>\n    </CustomScrollBar>\n  );\n};\n\nconst CustomScrollBar = styled(\"div\")(() => ({\n  maxHeight: \"600px\",\n}));\n\nexport default FinancialStatePage;\n"],"names":["useAppDispatch","useDispatch","CustomScrollBar","styled","maxHeight","_useState","useState","_useState2","_slicedToArray","sortOrder","setSortOrder","dispatch","income","useSelector","selectIncome","userName","selectUserName","userEmail","selectEmail","totalBudget","selectTotalBudget","expense","selectExpense","credit","selectCredit","deposit","selectDeposit","sortedIncome","_toConsumableArray","sort","a","b","Date","date","getTime","budgetData","unshift","name","value","incomeTotal","reduce","total","exp","amount","expenseTotal","COLORS","_jsx","children","_jsxs","Box","sx","display","flexDirection","justifyContent","backgroundColor","borderRadius","padding","fontFamily","width","boxShadow","marginTop","mb","Typography","variant","length","TableContainer","Table","TableHead","TableRow","TableCell","onClick","style","cursor","TableBody","map","paymentMethod","id","index","title","toLocaleString","Button","color","mt","reduceTheTotalBudget","resetCredit","increaseTotalBudget","resetDeposit","CssBaseline","alignItems","PieChart","height","Pie","dataKey","data","cx","cy","outerRadius","label","entry","fill","Cell","Legend","verticalAlign"],"sourceRoot":""}